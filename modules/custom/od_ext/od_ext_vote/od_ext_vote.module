<?php

/**
 * @file
 * Contains od_ext_vote.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\votingapi\VoteInterface;

/**
 * Implements hook_entity_insert().
 */
function od_ext_vote_entity_insert(EntityInterface $entity) {
  // Only act on content entities.
  if (!($entity instanceof FieldableEntityInterface)) {
    return;
  }
  // Clear the views cache.
  if ($entity instanceof VoteInterface) {
    $tags = ['config:views.view.solr_inventory'];
    \Drupal::service('cache_tags.invalidator')->invalidateTags($tags);
  }
}

function od_ext_vote_entity_delete(EntityInterface $entity) {
  // Only act on content entities.
  if (!($entity instanceof FieldableEntityInterface)) {
    return;
  }
  // Clear the views cache.
  if ($entity instanceof VoteInterface) {
    $tags = ['config:views.view.solr_inventory'];
    \Drupal::service('cache_tags.invalidator')->invalidateTags($tags);
  }
}

/**
 * Implements hook_entity_base_field_info_alter().
 */
function od_ext_vote_entity_base_field_info_alter(&$fields, EntityTypeInterface $entity_type) {
  if ($entity_type->id() == 'vote') {
    $fields['vote_source']->setDefaultValueCallback('od_ext_vote_vote_source');
  }
}

function od_ext_vote_vote_source() {
  return session_id();
}
